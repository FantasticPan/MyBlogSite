<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pan.blog.dao.mapper.BlogMapper">
    <resultMap id="BaseResultMap" type="com.pan.blog.entity.Blog">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="catalog" jdbcType="VARCHAR" property="catalog"/>
        <result column="category" jdbcType="VARCHAR" property="category"/>
        <result column="comment_size" jdbcType="INTEGER" property="commentSize"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="read_size" jdbcType="INTEGER" property="readSize"/>
        <result column="summary" jdbcType="VARCHAR" property="summary"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>
        <result column="vote_size" jdbcType="INTEGER" property="voteSize"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.pan.blog.entity.BlogWithBLOBs">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="html_content" jdbcType="LONGVARCHAR" property="htmlContent"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, catalog, category, comment_size, create_time, image, read_size, summary, title,
        update_time, vote_size, user_id
    </sql>
    <sql id="Blob_Column_List">
        content, html_content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.pan.blog.entity.BlogExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.pan.blog.entity.BlogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.pan.blog.entity.BlogExample">
        delete from blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.pan.blog.entity.BlogWithBLOBs">
        INSERT INTO blog (id, catalog, category,
                          comment_size, create_time, image,
                          read_size, summary, title,
                          update_time, vote_size, user_id,
                          content, html_content)
        VALUES (#{id,jdbcType=BIGINT}, #{catalog,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR},
                                       #{commentSize,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR},
                                       #{image,jdbcType=VARCHAR},
                                       #{readSize,jdbcType=INTEGER}, #{summary,jdbcType=VARCHAR},
                                       #{title,jdbcType=VARCHAR},
                                       #{updateTime,jdbcType=VARCHAR}, #{voteSize,jdbcType=INTEGER},
                #{userId,jdbcType=BIGINT},
                #{content,jdbcType=LONGVARCHAR}, #{htmlContent,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.pan.blog.entity.BlogWithBLOBs">
        insert into blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="catalog != null">
                catalog,
            </if>
            <if test="category != null">
                category,
            </if>
            <if test="commentSize != null">
                comment_size,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="readSize != null">
                read_size,
            </if>
            <if test="summary != null">
                summary,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="voteSize != null">
                vote_size,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="htmlContent != null">
                html_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="catalog != null">
                #{catalog,jdbcType=VARCHAR},
            </if>
            <if test="category != null">
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="commentSize != null">
                #{commentSize,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="readSize != null">
                #{readSize,jdbcType=INTEGER},
            </if>
            <if test="summary != null">
                #{summary,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=VARCHAR},
            </if>
            <if test="voteSize != null">
                #{voteSize,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="htmlContent != null">
                #{htmlContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.pan.blog.entity.BlogExample" resultType="java.lang.Integer">
        select count(*) from blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update blog
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.catalog != null">
                catalog = #{record.catalog,jdbcType=VARCHAR},
            </if>
            <if test="record.category != null">
                category = #{record.category,jdbcType=VARCHAR},
            </if>
            <if test="record.commentSize != null">
                comment_size = #{record.commentSize,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=VARCHAR},
            </if>
            <if test="record.image != null">
                image = #{record.image,jdbcType=VARCHAR},
            </if>
            <if test="record.readSize != null">
                read_size = #{record.readSize,jdbcType=INTEGER},
            </if>
            <if test="record.summary != null">
                summary = #{record.summary,jdbcType=VARCHAR},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=VARCHAR},
            </if>
            <if test="record.voteSize != null">
                vote_size = #{record.voteSize,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.htmlContent != null">
                html_content = #{record.htmlContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update blog
        set id = #{record.id,jdbcType=BIGINT},
        catalog = #{record.catalog,jdbcType=VARCHAR},
        category = #{record.category,jdbcType=VARCHAR},
        comment_size = #{record.commentSize,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=VARCHAR},
        image = #{record.image,jdbcType=VARCHAR},
        read_size = #{record.readSize,jdbcType=INTEGER},
        summary = #{record.summary,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=VARCHAR},
        vote_size = #{record.voteSize,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=BIGINT},
        content = #{record.content,jdbcType=LONGVARCHAR},
        html_content = #{record.htmlContent,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update blog
        set id = #{record.id,jdbcType=BIGINT},
        catalog = #{record.catalog,jdbcType=VARCHAR},
        category = #{record.category,jdbcType=VARCHAR},
        comment_size = #{record.commentSize,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=VARCHAR},
        image = #{record.image,jdbcType=VARCHAR},
        read_size = #{record.readSize,jdbcType=INTEGER},
        summary = #{record.summary,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=VARCHAR},
        vote_size = #{record.voteSize,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <select id="getRecentArticles" resultType="com.pan.blog.entity.Blog">
        SELECT *
        FROM blog
        ORDER BY read_size DESC
        LIMIT 3, 7
    </select>
    <select id="getFirstArticleByReadSize" resultType="com.pan.blog.entity.Blog">
        SELECT *
        FROM blog
        ORDER BY read_size DESC
        LIMIT 1
    </select>
    <select id="getSecondArticleByReadSize" resultType="com.pan.blog.entity.Blog">
        SELECT *
        FROM blog
        ORDER BY read_size DESC
        LIMIT 1, 1
    </select>
    <select id="getThirdArticleByReadSize" resultType="com.pan.blog.entity.Blog">
        SELECT *
        FROM blog
        ORDER BY read_size DESC
        LIMIT 2, 1
    </select>
</mapper>